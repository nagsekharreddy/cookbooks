{"options":[{"enabled":false,"definition":{"id":"5d58cc01-7c75-450c-be18-a388ddb129ec"},"inputs":{"branchFilters":"[\"+refs/heads/*\"]","additionalFields":"{}"}},{"enabled":false,"definition":{"id":"a9db38f9-9fdc-478c-b0f9-464221e58316"},"inputs":{"workItemType":"Issue","assignToRequestor":"true","additionalFields":"{}"}}],"variables":{"azureUserId":{"value":"VC"},"Build-all":{"value":"True","allowOverride":true},"Build-w12r2d-14-2":{"value":"True","allowOverride":true},"Build-w12r2d-15-0":{"value":"False","allowOverride":true},"Build-w16d-14-2":{"value":"False","allowOverride":true},"Build-w16d-15-0":{"value":"False","allowOverride":true},"Build-w19d-14-2":{"value":"False","allowOverride":true},"Build-w19d-15-0":{"value":"False","allowOverride":true},"clientsecret":{"value":null,"isSecret":true},"GitBranch":{"value":"$(Build.SourceBranch)","allowOverride":true},"quickstart-scripts":{"value":"$(Agent.BuildDirectory)\\test"},"system.debug":{"value":"false","allowOverride":true},"VersionText-w12r2d-14-2":{"value":"12","allowOverride":true},"VersionText-w12r2d-15-0":{"value":"2","allowOverride":true},"VersionText-w16d-14-2":{"value":"2","allowOverride":true},"VersionText-w16d-15-0":{"value":"2","allowOverride":true},"VersionText-w19d-14-2":{"value":"2","allowOverride":true},"VersionText-w19d-15-0":{"value":"2","allowOverride":true},"GitBranchPR":{"value":"debug/paas"}},"properties":{},"tags":[],"_links":{"self":{"href":"https://dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/build/Definitions/7?revision=83"},"web":{"href":"https://dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_build/definition?definitionId=7"},"editor":{"href":"https://dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_build/designer?id=7&_a=edit-build-definition"},"badge":{"href":"https://dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/build/status/7"}},"jobAuthorizationScope":1,"jobTimeoutInMinutes":360,"jobCancelTimeoutInMinutes":5,"badgeEnabled":true,"process":{"phases":[{"steps":[{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Install PS Module","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"if (\"$(GitBranch)\".Contains(\"refs/heads\")) {\n    $branch =\"$(GitBranch)\".replace(\"refs/heads/\", \"\")\n} else {\n    $branch = \"$(GitBranchPR)\"\n}\n$branch | Write-Host | Out-Default | Write-Verbose\nWrite-Host \"##vso[task.setvariable variable=GitBranch]$branch\" | Out-Default | Write-Verbose\nif ($Env:PsModuleInstalled -eq 'True') {\n    Write-Host \"PS Module already installed, skip the Install PS Module Task.\" | Out-Default | Write-Verbose\n    return;\n}\n\nWrite-Host \"Installing Module AzureRM\" | Out-Default | Write-Verbose\nInstall-Module -Name AzureRM -AllowClobber -Force\nWrite-Host \"Installed Module AzureRM\" | Out-Default | Write-Verbose\n\nWrite-Host \"Installing Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.KeyVault -RequiredVersion 2.0.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\n\n# Az.Accounts for Get-AzVMImage\nWrite-Host \"Installing Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Accounts -RequiredVersion 1.9.2 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\n\n# Az.Compute for Connect-AzAccount\nWrite-Host \"Installing Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Compute -RequiredVersion 4.2.1 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\n\n# Az.Resources for Get-AzResource\nWrite-Host \"Installing Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Resources -RequiredVersion 2.4.0 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\n\n# Az for Azure Modules\nWrite-Host \"Installing Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az -RequiredVersion 4.5.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\n\n# Pester for Testing\nWrite-Host \"Installing Module Pester RequiredVersion 5.0.3\" | Out-Default | Write-Verbose\nInstall-Module -Name Pester -RequiredVersion 5.0.3 -AllowClobber -Force\nWrite-Host \"Installed Module Pester\" | Out-Default | Write-Verbose\n\n$Env:PsModuleInstalled = 'True'","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"PsModuleInstalled":"True"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Azure Login","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/AzureLogin.ps1","arguments":"-CloudAccount $(azureUserId) -CloudSecret (ConvertTo-SecureString $(clientSecret) -AsPlainText -force)","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{"cloud_license_key":"dummy"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Build Image","timeoutInMinutes":120,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"BuildImage","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/bake-scalable-azure-image-pipeline.ps1","arguments":"-VersionText 'w12r2d-14-2-$(VersionText-w12r2d-14-2)' -VersionMajor 14 -VersionMinor 2 -AmazonAMIName '2012-R2-Datacenter' -GitBranch \"$(GitBranch)\" -Cloud 'Azure' -Win2012 $true","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{},"enabled":true,"continueOnError":true,"alwaysRun":false,"displayName":"Azure Resource Group Tagging","timeoutInMinutes":0,"condition":"or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True'))","task":{"id":"567f7830-5655-4d11-b4c5-bada59a77796","versionSpec":"1.*","definitionType":"task"},"inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"BakingDP-w12r2d-14-2-$(VersionText-w12r2d-14-2)","Key":"Usage","Value":"test-temp"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Generate: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-Host \"Writing the Full Image URL $(BuildImage.ImageUrl) in the $(Build.ArtifactStagingDirectory)\" | Out-Default | Write-Host\nOut-File -FilePath (Join-Path $(Build.ArtifactStagingDirectory) \"w12r2d-14-2.txt\") -InputObject $(BuildImage.ImageUrl) | Out-Default | Write-Host\nWrite-Host \"Full Image URL written successfully\" | Out-Default | Write-Host","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"TestImageName":"w12r2d-14-2-$(VersionText-w12r2d-14-2)","TestCloudName":"Azure","TestVmName":"Test122142$(VersionText-w12r2d-14-2)$(Build.BuildNumber)"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"VM Tests","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Invoke Pester Tests\ncd $(System.DefaultWorkingDirectory)\\Tests\n$result = Invoke-Pester -Script '.\\Image*' -OutputFormat  NUnitXml -OutputFile '$(System.DefaultWorkingDirectory)\\Test-Vm.xml' -PassThru\n$result | Out-Default | Write-Host\nif ($result.Result -eq \"Failed\") {\n    throw \"Failed Tests Count: $($result.FailedCount)\"\n} else {\n    Write-Host \"Tested the image successfully.\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Test Results **/Test-*.xml","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"0b0f01ed-7dde-43ff-9cbb-e48954daf9b1","versionSpec":"2.*","definitionType":"task"},"inputs":{"testRunner":"NUnit","testResultsFiles":"**/Test-*.xml","searchFolder":"$(System.DefaultWorkingDirectory)","mergeTestResults":"false","failTaskOnFailedTests":"false","testRunTitle":"w12r2d-14-2","platform":"","configuration":"","publishRunAttachments":"true"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Artifact: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"","task":{"id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe","versionSpec":"1.*","definitionType":"task"},"inputs":{"PathtoPublish":"$(Build.ArtifactStagingDirectory)/w12r2d-14-2.txt","ArtifactName":"w12r2d-14-2","ArtifactType":"Container","TargetPath":"","Parallel":"false","ParallelCount":"8","FileCopyOptions":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Delete Resource Group","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"94a74903-f93f-4075-884f-dc11f34058b4","versionSpec":"3.*","definitionType":"task"},"inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"BakingDP-w12r2d-14-2-$(VersionText-w12r2d-14-2)","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}],"name":"Agent job : w12r2d-14-2","refName":"Job_1","condition":"succeeded()","target":{"executionOptions":{"type":0},"allowScriptsAuthAccessOption":false,"type":1},"jobAuthorizationScope":1,"jobTimeoutInMinutes":120},{"steps":[{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Install PS Module","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"if (\"$(GitBranch)\".Contains(\"refs/heads\")) {\n    $branch =\"$(GitBranch)\".replace(\"refs/heads/\", \"\")\n} else {\n    $branch = \"$(GitBranchPR)\"\n}\n$branch | Write-Host | Out-Default | Write-Verbose\nWrite-Host \"##vso[task.setvariable variable=GitBranch]$branch\" | Out-Default | Write-Verbose\nif ($Env:PsModuleInstalled -eq 'True') {\n    Write-Host \"PS Module already installed, skip the Install PS Module Task.\" | Out-Default | Write-Verbose\n    return;\n}\n\nWrite-Host \"Installing Module AzureRM\" | Out-Default | Write-Verbose\nInstall-Module -Name AzureRM -AllowClobber -Force\nWrite-Host \"Installed Module AzureRM\" | Out-Default | Write-Verbose\n\nWrite-Host \"Installing Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.KeyVault -RequiredVersion 2.0.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\n\n# Az.Accounts for Get-AzVMImage\nWrite-Host \"Installing Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Accounts -RequiredVersion 1.9.2 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\n\n# Az.Compute for Connect-AzAccount\nWrite-Host \"Installing Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Compute -RequiredVersion 4.2.1 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\n\n# Az.Resources for Get-AzResource\nWrite-Host \"Installing Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Resources -RequiredVersion 2.4.0 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\n\n# Az for Azure Modules\nWrite-Host \"Installing Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az -RequiredVersion 4.5.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\n\n# Pester for Testing\nWrite-Host \"Installing Module Pester RequiredVersion 5.0.3\" | Out-Default | Write-Verbose\nInstall-Module -Name Pester -RequiredVersion 5.0.3 -AllowClobber -Force\nWrite-Host \"Installed Module Pester\" | Out-Default | Write-Verbose\n\n$Env:PsModuleInstalled = 'True'","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"PsModuleInstalled":"True"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Azure Login","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/AzureLogin.ps1","arguments":"-CloudAccount $(azureUserId) -CloudSecret (ConvertTo-SecureString $(clientSecret) -AsPlainText -force)","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{"cloud_license_key":"dummy"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Build Image","timeoutInMinutes":120,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","refName":"BuildImage","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/bake-scalable-azure-image-pipeline.ps1","arguments":"-VersionText 'w12r2d-15-0-$(VersionText-w12r2d-15-0)' -VersionMajor 15 -VersionMinor 0 -AmazonAMIName '2012-R2-Datacenter' -GitBranch \"$(GitBranch)\" -Cloud 'Azure' -Win2012 $true","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{},"enabled":true,"continueOnError":true,"alwaysRun":false,"displayName":"Azure Resource Group Tagging","timeoutInMinutes":0,"condition":"or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True'))","task":{"id":"567f7830-5655-4d11-b4c5-bada59a77796","versionSpec":"1.*","definitionType":"task"},"inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"BakingDP-w12r2d-15-0-$(VersionText-w12r2d-15-0)","Key":"Usage","Value":"test-temp"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Generate: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-Host \"Writing the Full Image URL $(BuildImage.ImageUrl) in the $(Build.ArtifactStagingDirectory)\" | Out-Default | Write-Host\nOut-File -FilePath (Join-Path $(Build.ArtifactStagingDirectory) \"w12r2d-15-0.txt\") -InputObject $(BuildImage.ImageUrl) | Out-Default | Write-Host\nWrite-Host \"Full Image URL written successfully\" | Out-Default | Write-Host","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"TestImageName":"w12r2d-15-0-$(VersionText-w12r2d-15-0)","TestCloudName":"Azure","TestVmName":"Test122150$(VersionText-w12r2d-15-0)$(Build.BuildNumber)"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"VM Tests","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Invoke Pester Tests\ncd $(System.DefaultWorkingDirectory)\\Tests\n$result = Invoke-Pester -Script '.\\Image*' -OutputFormat  NUnitXml -OutputFile '$(System.DefaultWorkingDirectory)\\Test-Vm.xml' -PassThru\n$result | Out-Default | Write-Host\nif ($result.Result -eq \"Failed\") {\n    throw \"Failed Tests Count: $($result.FailedCount)\"\n} else {\n    Write-Host \"Tested the image successfully.\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Test Results **/Test-*.xml","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"0b0f01ed-7dde-43ff-9cbb-e48954daf9b1","versionSpec":"2.*","definitionType":"task"},"inputs":{"testRunner":"NUnit","testResultsFiles":"**/Test-*.xml","searchFolder":"$(System.DefaultWorkingDirectory)","mergeTestResults":"false","failTaskOnFailedTests":"false","testRunTitle":"w12r2d-15-0","platform":"","configuration":"","publishRunAttachments":"true"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Artifact: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe","versionSpec":"1.*","definitionType":"task"},"inputs":{"PathtoPublish":"$(Build.ArtifactStagingDirectory)/w12r2d-15-0.txt","ArtifactName":"w12r2d-15-0","ArtifactType":"Container","TargetPath":"","Parallel":"false","ParallelCount":"8","FileCopyOptions":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Delete Resource Group","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"94a74903-f93f-4075-884f-dc11f34058b4","versionSpec":"3.*","definitionType":"task"},"inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"BakingDP-w12r2d-15-0-$(VersionText-w12r2d-15-0)","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}],"name":"Agent job : w12r2d-15-0","refName":"Job_5","condition":"succeeded()","target":{"executionOptions":{"type":0},"allowScriptsAuthAccessOption":false,"type":1},"jobAuthorizationScope":1},{"steps":[{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Install PS Module","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"if (\"$(GitBranch)\".Contains(\"refs/heads\")) {\n    $branch =\"$(GitBranch)\".replace(\"refs/heads/\", \"\")\n} else {\n    $branch = \"$(GitBranchPR)\"\n}\n$branch | Write-Host | Out-Default | Write-Verbose\nWrite-Host \"##vso[task.setvariable variable=GitBranch]$branch\" | Out-Default | Write-Verbose\nif ($Env:PsModuleInstalled -eq 'True') {\n    Write-Host \"PS Module already installed, skip the Install PS Module Task.\" | Out-Default | Write-Verbose\n    return;\n}\n\nWrite-Host \"Installing Module AzureRM\" | Out-Default | Write-Verbose\nInstall-Module -Name AzureRM -AllowClobber -Force\nWrite-Host \"Installed Module AzureRM\" | Out-Default | Write-Verbose\n\nWrite-Host \"Installing Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.KeyVault -RequiredVersion 2.0.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\n\n# Az.Accounts for Get-AzVMImage\nWrite-Host \"Installing Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Accounts -RequiredVersion 1.9.2 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\n\n# Az.Compute for Connect-AzAccount\nWrite-Host \"Installing Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Compute -RequiredVersion 4.2.1 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\n\n# Az.Resources for Get-AzResource\nWrite-Host \"Installing Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Resources -RequiredVersion 2.4.0 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\n\n# Az for Azure Modules\nWrite-Host \"Installing Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az -RequiredVersion 4.5.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\n\n# Pester for Testing\nWrite-Host \"Installing Module Pester RequiredVersion 5.0.3\" | Out-Default | Write-Verbose\nInstall-Module -Name Pester -RequiredVersion 5.0.3 -AllowClobber -Force\nWrite-Host \"Installed Module Pester\" | Out-Default | Write-Verbose\n\n$Env:PsModuleInstalled = 'True'","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"PsModuleInstalled":"True"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Azure Login","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/AzureLogin.ps1","arguments":"-CloudAccount $(azureUserId) -CloudSecret (ConvertTo-SecureString $(clientSecret) -AsPlainText -force)","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{"cloud_license_key":"dummy"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Build Image","timeoutInMinutes":120,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"BuildImage","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/bake-scalable-azure-image-pipeline.ps1","arguments":"-VersionText 'w16d-14-2-$(VersionText-w16d-14-2)' -VersionMajor 14 -VersionMinor 2 -AmazonAMIName '2016-Datacenter' -GitBranch \"$(GitBranch)\" -Cloud 'Azure' -Win2012 $false","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{},"enabled":true,"continueOnError":true,"alwaysRun":false,"displayName":"Azure Resource Group Tagging","timeoutInMinutes":0,"condition":"or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True'))","task":{"id":"567f7830-5655-4d11-b4c5-bada59a77796","versionSpec":"1.*","definitionType":"task"},"inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"BakingDP-w16d-14-2-$(VersionText-w16d-14-2)","Key":"Usage","Value":"test-temp"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Generate: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-Host \"Writing the Full Image URL $(BuildImage.ImageUrl) in the $(Build.ArtifactStagingDirectory)\" | Out-Default | Write-Host\nOut-File -FilePath (Join-Path $(Build.ArtifactStagingDirectory) \"w16d-14-2.txt\") -InputObject $(BuildImage.ImageUrl) | Out-Default | Write-Host\nWrite-Host \"Full Image URL written successfully\" | Out-Default | Write-Host","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"TestImageName":"w16d-14-2-$(VersionText-w16d-14-2)","TestCloudName":"Azure","TestVmName":"Test16142$(VersionText-w16d-14-2)$(Build.BuildNumber)"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"VM Tests","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w12r2d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Invoke Pester Tests\ncd $(System.DefaultWorkingDirectory)\\Tests\n$result = Invoke-Pester -Script '.\\Image*' -OutputFormat  NUnitXml -OutputFile '$(System.DefaultWorkingDirectory)\\Test-Vm.xml' -PassThru\n$result | Out-Default | Write-Host\nif ($result.Result -eq \"Failed\") {\n    throw \"Failed Tests Count: $($result.FailedCount)\"\n} else {\n    Write-Host \"Tested the image successfully.\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Test Results **/Test-*.xml","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"0b0f01ed-7dde-43ff-9cbb-e48954daf9b1","versionSpec":"2.*","definitionType":"task"},"inputs":{"testRunner":"NUnit","testResultsFiles":"**/Test-*.xml","searchFolder":"$(System.DefaultWorkingDirectory)","mergeTestResults":"false","failTaskOnFailedTests":"false","testRunTitle":"w16d-14-2","platform":"","configuration":"","publishRunAttachments":"true"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Artifact: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe","versionSpec":"1.*","definitionType":"task"},"inputs":{"PathtoPublish":"$(Build.ArtifactStagingDirectory)/w16d-14-2.txt","ArtifactName":"w16d-14-2","ArtifactType":"Container","TargetPath":"","Parallel":"false","ParallelCount":"8","FileCopyOptions":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Delete Resource Group","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"94a74903-f93f-4075-884f-dc11f34058b4","versionSpec":"3.*","definitionType":"task"},"inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"BakingDP-w16d-14-2-$(VersionText-w16d-14-2)","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}],"name":"Agent job : w16d-14-2","refName":"Job_6","condition":"succeeded()","target":{"executionOptions":{"type":0},"allowScriptsAuthAccessOption":false,"type":1},"jobAuthorizationScope":1},{"steps":[{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Install PS Module","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"if (\"$(GitBranch)\".Contains(\"refs/heads\")) {\n    $branch =\"$(GitBranch)\".replace(\"refs/heads/\", \"\")\n} else {\n    $branch = \"$(GitBranchPR)\"\n}\n$branch | Write-Host | Out-Default | Write-Verbose\nWrite-Host \"##vso[task.setvariable variable=GitBranch]$branch\" | Out-Default | Write-Verbose\nif ($Env:PsModuleInstalled -eq 'True') {\n    Write-Host \"PS Module already installed, skip the Install PS Module Task.\" | Out-Default | Write-Verbose\n    return;\n}\n\nWrite-Host \"Installing Module AzureRM\" | Out-Default | Write-Verbose\nInstall-Module -Name AzureRM -AllowClobber -Force\nWrite-Host \"Installed Module AzureRM\" | Out-Default | Write-Verbose\n\nWrite-Host \"Installing Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.KeyVault -RequiredVersion 2.0.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\n\n# Az.Accounts for Get-AzVMImage\nWrite-Host \"Installing Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Accounts -RequiredVersion 1.9.2 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\n\n# Az.Compute for Connect-AzAccount\nWrite-Host \"Installing Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Compute -RequiredVersion 4.2.1 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\n\n# Az.Resources for Get-AzResource\nWrite-Host \"Installing Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Resources -RequiredVersion 2.4.0 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\n\n# Az for Azure Modules\nWrite-Host \"Installing Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az -RequiredVersion 4.5.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\n\n# Pester for Testing\nWrite-Host \"Installing Module Pester RequiredVersion 5.0.3\" | Out-Default | Write-Verbose\nInstall-Module -Name Pester -RequiredVersion 5.0.3 -AllowClobber -Force\nWrite-Host \"Installed Module Pester\" | Out-Default | Write-Verbose\n\n$Env:PsModuleInstalled = 'True'","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"PsModuleInstalled":"True"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Azure Login","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/AzureLogin.ps1","arguments":"-CloudAccount $(azureUserId) -CloudSecret (ConvertTo-SecureString $(clientSecret) -AsPlainText -force)","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{"cloud_license_key":"dummy"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Build Image","timeoutInMinutes":120,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","refName":"BuildImage","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/bake-scalable-azure-image-pipeline.ps1","arguments":"-VersionText 'w16d-15-0-$(VersionText-w16d-15-0)' -VersionMajor 15 -VersionMinor 0 -AmazonAMIName '2016-Datacenter' -GitBranch \"$(GitBranch)\" -Cloud 'Azure' -Win2012 $false","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{},"enabled":true,"continueOnError":true,"alwaysRun":false,"displayName":"Azure Resource Group Tagging","timeoutInMinutes":0,"condition":"or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True'))","task":{"id":"567f7830-5655-4d11-b4c5-bada59a77796","versionSpec":"1.*","definitionType":"task"},"inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"BakingDP-w16d-15-0-$(VersionText-w16d-15-0)","Key":"Usage","Value":"test-temp"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Generate: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-Host \"Writing the Full Image URL $(BuildImage.ImageUrl) in the $(Build.ArtifactStagingDirectory)\" | Out-Default | Write-Host\nOut-File -FilePath (Join-Path $(Build.ArtifactStagingDirectory) \"w16d-15-0.txt\") -InputObject $(BuildImage.ImageUrl) | Out-Default | Write-Host\nWrite-Host \"Full Image URL written successfully\" | Out-Default | Write-Host","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"TestImageName":"w16d-15-0-$(VersionText-w16d-15-0)","TestCloudName":"Azure","TestVmName":"Test16150$(VersionText-w16d-15-0)$(Build.BuildNumber)"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"VM Tests","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Invoke Pester Tests\ncd $(System.DefaultWorkingDirectory)\\Tests\n$result = Invoke-Pester -Script '.\\Image*' -OutputFormat  NUnitXml -OutputFile '$(System.DefaultWorkingDirectory)\\Test-Vm.xml' -PassThru\n$result | Out-Default | Write-Host\nif ($result.Result -eq \"Failed\") {\n    throw \"Failed Tests Count: $($result.FailedCount)\"\n} else {\n    Write-Host \"Tested the image successfully.\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Test Results **/Test-*.xml","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"0b0f01ed-7dde-43ff-9cbb-e48954daf9b1","versionSpec":"2.*","definitionType":"task"},"inputs":{"testRunner":"NUnit","testResultsFiles":"**/Test-*.xml","searchFolder":"$(System.DefaultWorkingDirectory)","mergeTestResults":"false","failTaskOnFailedTests":"false","testRunTitle":"w16d-15-0","platform":"","configuration":"","publishRunAttachments":"true"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Artifact: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe","versionSpec":"1.*","definitionType":"task"},"inputs":{"PathtoPublish":"$(Build.ArtifactStagingDirectory)/w16d-15-0.txt","ArtifactName":"w16d-15-0","ArtifactType":"Container","TargetPath":"","Parallel":"false","ParallelCount":"8","FileCopyOptions":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Delete Resource Group","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"94a74903-f93f-4075-884f-dc11f34058b4","versionSpec":"3.*","definitionType":"task"},"inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"BakingDP-w16d-15-0-$(VersionText-w16d-15-0)","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}],"name":"Agent job : w16d-15-0","refName":"Job_4","condition":"succeeded()","target":{"executionOptions":{"type":0},"allowScriptsAuthAccessOption":false,"type":1},"jobAuthorizationScope":1},{"steps":[{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Install PS Module","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"if (\"$(GitBranch)\".Contains(\"refs/heads\")) {\n    $branch =\"$(GitBranch)\".replace(\"refs/heads/\", \"\")\n} else {\n    $branch = \"$(GitBranchPR)\"\n}\n$branch | Write-Host | Out-Default | Write-Verbose\nWrite-Host \"##vso[task.setvariable variable=GitBranch]$branch\" | Out-Default | Write-Verbose\nif ($Env:PsModuleInstalled -eq 'True') {\n    Write-Host \"PS Module already installed, skip the Install PS Module Task.\" | Out-Default | Write-Verbose\n    return;\n}\n\nWrite-Host \"Installing Module AzureRM\" | Out-Default | Write-Verbose\nInstall-Module -Name AzureRM -AllowClobber -Force\nWrite-Host \"Installed Module AzureRM\" | Out-Default | Write-Verbose\n\nWrite-Host \"Installing Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.KeyVault -RequiredVersion 2.0.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\n\n# Az.Accounts for Get-AzVMImage\nWrite-Host \"Installing Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Accounts -RequiredVersion 1.9.2 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\n\n# Az.Compute for Connect-AzAccount\nWrite-Host \"Installing Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Compute -RequiredVersion 4.2.1 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\n\n# Az.Resources for Get-AzResource\nWrite-Host \"Installing Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Resources -RequiredVersion 2.4.0 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\n\n# Az for Azure Modules\nWrite-Host \"Installing Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az -RequiredVersion 4.5.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\n\n# Pester for Testing\nWrite-Host \"Installing Module Pester RequiredVersion 5.0.3\" | Out-Default | Write-Verbose\nInstall-Module -Name Pester -RequiredVersion 5.0.3 -AllowClobber -Force\nWrite-Host \"Installed Module Pester\" | Out-Default | Write-Verbose\n\n$Env:PsModuleInstalled = 'True'","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"PsModuleInstalled":"True"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Azure Login","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/AzureLogin.ps1","arguments":"-CloudAccount $(azureUserId) -CloudSecret (ConvertTo-SecureString $(clientSecret) -AsPlainText -force)","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{"cloud_license_key":"dummy"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Build Image","timeoutInMinutes":120,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","refName":"BuildImage","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/bake-scalable-azure-image-pipeline.ps1","arguments":"-VersionText 'w19d-14-2-$(VersionText-w19d-14-2)' -VersionMajor 14 -VersionMinor 2 -AmazonAMIName '2019-Datacenter' -GitBranch \"$(GitBranch)\" -Cloud 'Azure' -Win2012 $false","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{},"enabled":true,"continueOnError":true,"alwaysRun":false,"displayName":"Azure Resource Group Tagging","timeoutInMinutes":0,"condition":"or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True'))","task":{"id":"567f7830-5655-4d11-b4c5-bada59a77796","versionSpec":"1.*","definitionType":"task"},"inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"BakingDP-w19d-14-2-$(VersionText-w19d-14-2)","Key":"Usage","Value":"test-temp"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Generate: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-Host \"Writing the Full Image URL $(BuildImage.ImageUrl) in the $(Build.ArtifactStagingDirectory)\" | Out-Default | Write-Host\nOut-File -FilePath (Join-Path $(Build.ArtifactStagingDirectory) \"w19d-14-2.txt\") -InputObject $(BuildImage.ImageUrl) | Out-Default | Write-Host\nWrite-Host \"Full Image URL written successfully\" | Out-Default | Write-Host","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"TestImageName":"w19d-14-2-$(VersionText-w19d-14-2)","TestCloudName":"Azure","TestVmName":"Test19142$(VersionText-w19d-14-2)$(Build.BuildNumber)"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"VM Tests","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Invoke Pester Tests\ncd $(System.DefaultWorkingDirectory)\\Tests\n$result = Invoke-Pester -Script '.\\Image*' -OutputFormat  NUnitXml -OutputFile '$(System.DefaultWorkingDirectory)\\Test-Vm.xml' -PassThru\n$result | Out-Default | Write-Host\nif ($result.Result -eq \"Failed\") {\n    throw \"Failed Tests Count: $($result.FailedCount)\"\n} else {\n    Write-Host \"Tested the image successfully.\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Test Results **/Test-*.xml","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"0b0f01ed-7dde-43ff-9cbb-e48954daf9b1","versionSpec":"2.*","definitionType":"task"},"inputs":{"testRunner":"NUnit","testResultsFiles":"**/Test-*.xml","searchFolder":"$(System.DefaultWorkingDirectory)","mergeTestResults":"false","failTaskOnFailedTests":"false","testRunTitle":"w19d-14-2","platform":"","configuration":"","publishRunAttachments":"true"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Artifact: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe","versionSpec":"1.*","definitionType":"task"},"inputs":{"PathtoPublish":"$(Build.ArtifactStagingDirectory)/w19d-14-2.txt","ArtifactName":"w19d-14-2","ArtifactType":"Container","TargetPath":"","Parallel":"false","ParallelCount":"8","FileCopyOptions":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Delete Resource Group","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"94a74903-f93f-4075-884f-dc11f34058b4","versionSpec":"3.*","definitionType":"task"},"inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"BakingDP-w19d-14-2-$(VersionText-w19d-14-2)","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}],"name":"Agent job : w19d-14-2","refName":"Job_3","condition":"succeeded()","target":{"executionOptions":{"type":0},"allowScriptsAuthAccessOption":false,"type":1},"jobAuthorizationScope":1},{"steps":[{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Install PS Module","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"if (\"$(GitBranch)\".Contains(\"refs/heads\")) {\n    $branch =\"$(GitBranch)\".replace(\"refs/heads/\", \"\")\n} else {\n    $branch = \"$(GitBranchPR)\"\n}\n$branch | Write-Host | Out-Default | Write-Verbose\nWrite-Host \"##vso[task.setvariable variable=GitBranch]$branch\" | Out-Default | Write-Verbose\nif ($Env:PsModuleInstalled -eq 'True') {\n    Write-Host \"PS Module already installed, skip the Install PS Module Task.\" | Out-Default | Write-Verbose\n    return;\n}\n\nWrite-Host \"Installing Module AzureRM\" | Out-Default | Write-Verbose\nInstall-Module -Name AzureRM -AllowClobber -Force\nWrite-Host \"Installed Module AzureRM\" | Out-Default | Write-Verbose\n\nWrite-Host \"Installing Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.KeyVault -RequiredVersion 2.0.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.KeyVault  -RequiredVersion 2.0.0\" | Out-Default | Write-Verbose\n\n# Az.Accounts for Get-AzVMImage\nWrite-Host \"Installing Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Accounts -RequiredVersion 1.9.2 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Accounts -RequiredVersion 1.9.2\" | Out-Default | Write-Verbose\n\n# Az.Compute for Connect-AzAccount\nWrite-Host \"Installing Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Compute -RequiredVersion 4.2.1 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Compute -RequiredVersion 4.2.1\" | Out-Default | Write-Verbose\n\n# Az.Resources for Get-AzResource\nWrite-Host \"Installing Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az.Resources -RequiredVersion 2.4.0 -Force -AllowClobber | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az.Resources -RequiredVersion 2.4.0\" | Out-Default | Write-Verbose\n\n# Az for Azure Modules\nWrite-Host \"Installing Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\nInstall-Module -Name Az -RequiredVersion 4.5.0 -AllowClobber -Force | Out-Default | Write-Host | Write-Verbose\nWrite-Host \"Installed Module Az -RequiredVersion 4.5.0\" | Out-Default | Write-Verbose\n\n# Pester for Testing\nWrite-Host \"Installing Module Pester RequiredVersion 5.0.3\" | Out-Default | Write-Verbose\nInstall-Module -Name Pester -RequiredVersion 5.0.3 -AllowClobber -Force\nWrite-Host \"Installed Module Pester\" | Out-Default | Write-Verbose\n\n$Env:PsModuleInstalled = 'True'","errorActionPreference":"continue","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"PsModuleInstalled":"True"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Azure Login","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/AzureLogin.ps1","arguments":"-CloudAccount $(azureUserId) -CloudSecret (ConvertTo-SecureString $(clientSecret) -AsPlainText -force)","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{"cloud_license_key":"dummy"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Build Image","timeoutInMinutes":120,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","refName":"BuildImage","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"filePath","filePath":"scripts/bake-scalable-azure-image-pipeline.ps1","arguments":"-VersionText 'w19d-15-0-$(VersionText-w19d-15-0)' -VersionMajor 15 -VersionMinor 0 -AmazonAMIName '2019-Datacenter' -GitBranch \"$(GitBranch)\" -Cloud 'Azure' -Win2012 $false","script":"# Write your PowerShell commands here.\n\nWrite-Host \"Hello World\"\n","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":"scripts"}},{"environment":{},"enabled":true,"continueOnError":true,"alwaysRun":false,"displayName":"Azure Resource Group Tagging","timeoutInMinutes":0,"condition":"or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True'))","task":{"id":"567f7830-5655-4d11-b4c5-bada59a77796","versionSpec":"1.*","definitionType":"task"},"inputs":{"ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","Action":"Add","ResourceGroupName":"BakingDP-w19d-15-0-$(VersionText-w19d-15-0)","Key":"Usage","Value":"test-temp"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Generate: Image URL","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"Write-Host \"Writing the Full Image URL $(BuildImage.ImageUrl) in the $(Build.ArtifactStagingDirectory)\" | Out-Default | Write-Host\nOut-File -FilePath (Join-Path $(Build.ArtifactStagingDirectory) \"w19d-15-0.txt\") -InputObject $(BuildImage.ImageUrl) | Out-Default | Write-Host\nWrite-Host \"Full Image URL written successfully\" | Out-Default | Write-Host","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{"TestImageName":"w19d-15-0-$(VersionText-w19d-15-0)","TestCloudName":"Azure","TestVmName":"Test19150$(VersionText-w19d-15-0)$(Build.BuildNumber)"},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"VM Tests","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"e213ff0f-5d5c-4791-802d-52ea3e7be1f1","versionSpec":"2.*","definitionType":"task"},"inputs":{"targetType":"inline","filePath":"","arguments":"","script":"# Invoke Pester Tests\ncd $(System.DefaultWorkingDirectory)\\Tests\n$result = Invoke-Pester -Script '.\\Image*' -OutputFormat  NUnitXml -OutputFile '$(System.DefaultWorkingDirectory)\\Test-Vm.xml' -PassThru\n$result | Out-Default | Write-Host\nif ($result.Result -eq \"Failed\") {\n    throw \"Failed Tests Count: $($result.FailedCount)\"\n} else {\n    Write-Host \"Tested the image successfully.\"\n}","errorActionPreference":"stop","failOnStderr":"false","ignoreLASTEXITCODE":"false","pwsh":"false","workingDirectory":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Test Results **/Test-*.xml","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"0b0f01ed-7dde-43ff-9cbb-e48954daf9b1","versionSpec":"2.*","definitionType":"task"},"inputs":{"testRunner":"NUnit","testResultsFiles":"**/Test-*.xml","searchFolder":"$(System.DefaultWorkingDirectory)","mergeTestResults":"false","failTaskOnFailedTests":"false","testRunTitle":"w19d-15-0","platform":"","configuration":"","publishRunAttachments":"true"}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Publish Artifact: Image URL copy","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"2ff763a7-ce83-4e1f-bc89-0ae63477cebe","versionSpec":"1.*","definitionType":"task"},"inputs":{"PathtoPublish":"$(Build.ArtifactStagingDirectory)/w19d-15-0.txt","ArtifactName":"w19d-15-0","ArtifactType":"Container","TargetPath":"","Parallel":"false","ParallelCount":"8","FileCopyOptions":""}},{"environment":{},"enabled":true,"continueOnError":false,"alwaysRun":false,"displayName":"Delete Resource Group","timeoutInMinutes":0,"condition":"and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))","task":{"id":"94a74903-f93f-4075-884f-dc11f34058b4","versionSpec":"3.*","definitionType":"task"},"inputs":{"deploymentScope":"Resource Group","ConnectedServiceName":"e61ac796-c298-4e1f-a8dc-98fb50faa590","subscriptionName":"739c4e86-bd75-4910-8d6e-d7eb23ab94f3","action":"DeleteRG","resourceGroupName":"BakingDP-w19d-15-0-$(VersionText-w19d-15-0)","location":"","templateLocation":"Linked artifact","csmFileLink":"","csmParametersFileLink":"","csmFile":"","csmParametersFile":"","overrideParameters":"","deploymentMode":"Incremental","deploymentName":"","deploymentOutputs":"","addSpnToEnvironment":"false"}}],"name":"Agent job : w19d-15-0","refName":"Job_2","condition":"succeeded()","target":{"executionOptions":{"type":0},"allowScriptsAuthAccessOption":false,"type":1},"jobAuthorizationScope":1}],"target":{"agentSpecification":{"identifier":"windows-2019"}},"type":1},"repository":{"properties":{"apiUrl":"https://api.github.com/repos/robe070/cookbooks","branchesUrl":"https://api.github.com/repos/robe070/cookbooks/branches","cloneUrl":"https://github.com/robe070/cookbooks.git","connectedServiceId":"945c2578-7e7d-45e2-8c1c-8d2c0680ed77","defaultBranch":"debug/paas","fullName":"robe070/cookbooks","hasAdminPermissions":"False","isFork":"True","isPrivate":"False","lastUpdated":"08/31/2020 11:02:13","manageUrl":"https://github.com/robe070/cookbooks","nodeId":"MDEwOlJlcG9zaXRvcnkyMjcwMzY2MA==","ownerId":"4089160","orgName":"robe070","refsUrl":"https://api.github.com/repos/robe070/cookbooks/git/refs","safeRepository":"robe070/cookbooks","shortName":"cookbooks","ownerAvatarUrl":"https://avatars3.githubusercontent.com/u/4089160?v=4","archived":"False","externalId":"22703660","ownerIsAUser":"True","checkoutNestedSubmodules":"false","cleanOptions":"0","fetchDepth":"0","gitLfsSupport":"false","reportBuildStatus":"true","skipSyncSource":"false","labelSourcesFormat":"$(build.buildNumber)","labelSources":"0"},"id":"robe070/cookbooks","type":"GitHub","name":"robe070/cookbooks","url":"https://github.com/robe070/cookbooks.git","defaultBranch":"debug/paas","clean":"false","checkoutSubmodules":false},"processParameters":{},"quality":1,"authoredBy":{"displayName":"Varun Chopra","url":"https://spsprodeau1.vssps.visualstudio.com/A074edf4b-c1eb-403e-828d-96de9041e576/_apis/Identities/3d61d285-fce6-676a-a647-4bbe10ded415","_links":{"avatar":{"href":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"}},"id":"3d61d285-fce6-676a-a647-4bbe10ded415","uniqueName":"VarunChopra@lansacloudlansacom.onmicrosoft.com","imageUrl":"https://dev.azure.com/VisualLansa/_apis/GraphProfile/MemberAvatars/aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1","descriptor":"aad.M2Q2MWQyODUtZmNlNi03NzZhLWE2NDctNGJiZTEwZGVkNDE1"},"drafts":[],"queue":{"_links":{"self":{"href":"https://dev.azure.com/VisualLansa/_apis/build/Queues/9"}},"id":9,"name":"Azure Pipelines","url":"https://dev.azure.com/VisualLansa/_apis/build/Queues/9","pool":{"id":9,"name":"Azure Pipelines","isHosted":true}},"id":7,"name":"Lansa Images - Cookbooks","url":"https://dev.azure.com/VisualLansa/8b247587-8424-435c-9068-7e9fdd0edcf1/_apis/build/Definitions/7?revision=83","uri":"vstfs:///Build/Definition/7","path":"\\","type":2,"queueStatus":0,"revision":83,"createdDate":"2020-08-31T11:11:52.440Z","project":{"id":"8b247587-8424-435c-9068-7e9fdd0edcf1","name":"Lansa Azure Scalable License Images","url":"https://dev.azure.com/VisualLansa/_apis/projects/8b247587-8424-435c-9068-7e9fdd0edcf1","state":1,"revision":13,"visibility":2,"lastUpdateTime":"2020-08-12T04:43:18.463Z"}}